apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  annotations:
    strimzi.io/use-connector-resources: "true"
  labels:
    app: universal-kafka
  name: universal-kafka-connect
  namespace: kafka-connect
spec:
  bootstrapServers: warpstream-agent.warpstream.svc.cluster.local:9092
  config:
    config.providers: env
    config.providers.env.class: org.apache.kafka.common.config.provider.EnvVarConfigProvider
    config.storage.replication.factor: 1
    config.storage.topic: infra.kafka.connect.configs
    consumer.max.poll.records: 500
    group.id: infra.kafka.connect.init
    offset.storage.replication.factor: 1
    offset.storage.topic: infra.kafka.connect.offsets
    producer.batch.size: 32768
    producer.linger.ms: 100
    status.storage.replication.factor: 1
    status.storage.topic: infra.kafka.connect.status
  image: ttl.sh/hxt-kafka-connect-amd64:24h
  jvmOptions:
    -Xmx: 3G
  replicas: 1
  resources:
    limits:
      cpu: "2"
      memory: 4Gi
    requests:
      cpu: "1"
      memory: 2Gi
  template:
    connectContainer:
      env:
      - name: POLARIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: polaris-root-password
            name: polaris-root-password
      - name: POSTGRES_HOST
        valueFrom:
          secretKeyRef:
            key: host
            name: pricefiles-db-credentials
      - name: POSTGRES_PORT
        valueFrom:
          secretKeyRef:
            key: port
            name: pricefiles-db-credentials
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: pricefiles-db-credentials
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: pricefiles-db-credentials
      - name: POSTGRES_DB
        valueFrom:
          secretKeyRef:
            key: dbname
            name: pricefiles-db-credentials
