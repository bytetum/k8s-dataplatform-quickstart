# This configuration creates a single Trino instance that acts as both a
# coordinator and a worker, matching the provided manifest.

# 1. Disable the separate worker deployment.
worker:
  enabled: false

# 2. Configure the coordinator pod.
coordinator:
  # Allow the coordinator to be used for running queries.
  nodeScheduler:
    includeCoordinator: true

  # Match the resource requests and limits from your manifest.
  resources:
    requests:
      memory: "1.5Gi"
      cpu: "750m"
    limits:
      memory: "3Gi"
      cpu: "1.5"

env:
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: iceberg-bucket-credentials
        key: AWS_ACCESS_KEY
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: iceberg-bucket-credentials
        key: AWS_SECRET_KEY
  - name: AWS_REGION
    valueFrom:
      secretKeyRef:
        name: iceberg-bucket-credentials
        key: AWS_REGION
        optional: true

# 3. Define general server configurations.
server:
  # Node properties from your manifest (node.properties).
  # The node.id is automatically generated by the chart.
  node:
    environment: production

  # JVM arguments from your manifest (jvm.config).
  jvm:
    config: |
      -server
      -Xmx2G
      -XX:+UseG1GC
      -XX:G1HeapRegionSize=32M
      -XX:+UseGCOverheadLimit
      -XX:+ExplicitGCInvokesConcurrent
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:+ExitOnOutOfMemoryError
      -Djdk.attach.allowAttachSelf=true

  # Logging configuration from your manifest (log.properties).
  log:
    properties: |
      io.trino=INFO

# 4. Define the Polaris catalog to be mounted into /etc/trino/catalog.
catalogs:
  # This creates the polaris.properties file.
  iceberg: |
    connector.name=iceberg
    iceberg.catalog.type=rest
    iceberg.rest-catalog.uri=http://polaris.polaris.svc.cluster.local:8181/api/catalog
    iceberg.rest-catalog.warehouse=ao_catalog
    iceberg.rest-catalog.security=OAUTH2
    iceberg.rest-catalog.oauth2.credential=root:s3cr3t
    iceberg.rest-catalog.oauth2.scope=PRINCIPAL_ROLE:ALL
    iceberg.rest-catalog.oauth2.server-uri=http://polaris.polaris.svc.cluster.local:8181/api/catalog/v1/oauth/tokens
    fs.native-s3.enabled=true
    s3.endpoint=https://s3.amazonaws.com
    s3.region=eu-west-3

# Note: The service configuration, image name (trinodb/trino:latest),
# and port (8080) match the defaults in the Helm chart, so they
# do not need to be explicitly defined in this file.